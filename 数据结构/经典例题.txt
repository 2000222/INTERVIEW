每次做新的题目之前都要进行复习，看前面做过的题目
做完这个文件里的例题去做剑指offer
https://www.nowcoder.com/ta/coding-interviews?query=&asc=true&order=&page=1
### 数组
1. 二维排序数组搜索 √ array.py

### 二叉树
1. 二叉树三种遍历，递归和非递归? √ bin_tree.py

2. 二叉树深度遍历，时间复杂度和空间复杂度? √ bin_tree.py

### 排序
1. [八大排序算法的Python实现](http://python.jobbole.com/82270/) √ sort.py

2. 海量数据排序? √ sort.py

### 查找

1. 二分查找算法，给出递归和非递归实现，并分析算法的时间复杂度？ √ search.py

### lc原题
1. 给定一颗二叉树，判断这颗树是否左右对称 √ tree_sym.py

2. 求最大连续字串大小 √ array.py

3. S形广度优先遍历二叉树 √ bin_tree.py

4. 给定一个整数数组，找出该数组中所有不重复的3个数，它们的和为0。[3sum medium](https://leetcode.com/problems/3sum/description/) √ sum.py

### 面试题
1. 一个整数数组，设计方法，让所有奇数在前，所有偶数在后; 扩展：三种数，第一种放前，第二种放中间，第三种放最后 √ array.py

2. 给定一个整数n，编写函数算出有多少个每位都不相同的n位整数 √ array.py

3. 给定一个整形数组，数组是无重复随机无序的，打印出所有元素左边第一个大于该元素的值 √ array.py

4. 归并两个有序数组 / 多路归并， 归并k个长度为n的有序数组 √ array.py

5. 一个长度为n的数组(n一定是偶数个)，将其平均分成两部分，找出能使这两部分的和的乘积最大的数组平分方式